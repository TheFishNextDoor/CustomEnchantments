package fun.sunrisemc.fishchantments;

import java.lang.reflect.Field;
import java.util.ArrayList;

import org.bukkit.NamespacedKey;
import org.bukkit.enchantments.Enchantment;

import fun.sunrisemc.fishchantments.enchantment_definitions.Curses.CurseOfAquaphobia;
import fun.sunrisemc.fishchantments.enchantment_definitions.Curses.CurseOfLevitating;
import fun.sunrisemc.fishchantments.enchantment_definitions.Curses.CurseOfMiningFatigue;
import fun.sunrisemc.fishchantments.enchantment_definitions.Curses.CurseOfRadiance;
import fun.sunrisemc.fishchantments.enchantment_definitions.Curses.CurseOfSlowness;
import fun.sunrisemc.fishchantments.enchantment_definitions.Curses.CurseOfWeakness;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.AquaAspect;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Destructive;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Enlightenment;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Excavating;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Fling;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Invisibility;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Precision;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Radiance;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Range;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Reflection;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Replanting;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Spurs;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Telekinesis;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Tilling;
import fun.sunrisemc.fishchantments.enchantment_definitions.Generic.Unbreakable;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Boot.Anchor;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Boot.Bounce;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Boot.Crush;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Boot.Leaping;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Boot.SlowFalling;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.DeathWish;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.DragonScales;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.FireResistance;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.Flaming;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.Haste;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.Healing;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.HeroOfTheVillage;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.IncreasedHealth;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.ProjectileResistance;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Chestplate.Strength;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Elytra.Boosters;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Elytra.Momentum;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Helmet.ConduitPower;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Helmet.Gills;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Helmet.NightVision;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Helmet.Sustenance;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Helmet.Worm;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Legging.DolphinsGrace;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Legging.Heavy;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Legging.Swiftness;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.BloodTipped;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Crippling;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Debilitating;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Disorienting;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Glass;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Levitating;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.LifeSteal;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Obscure;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Starving;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Venom;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Volley;
import fun.sunrisemc.fishchantments.enchantment_definitions.specialties.Weapon.Withering;

public class CustomEnchantment {
    public static Enchantment DESTRUCTIVE;
    public static Enchantment TILLING;
    public static Enchantment REPLANTING;
    public static Enchantment EXCAVATING;
    public static Enchantment TELEKINESIS;
    public static Enchantment UNBREAKABLE;
    public static Enchantment SUSTENANCE;
    public static Enchantment WORM;
    public static Enchantment CRUSH;
    public static Enchantment LIFE_STEAL;
    public static Enchantment FLING;
    public static Enchantment ENLIGHTENMENT;
    public static Enchantment RANGE;
    public static Enchantment PRECISION;
    public static Enchantment POISON;
    public static Enchantment WITHER;
    public static Enchantment BLOODTIPPED;
    public static Enchantment VOLLEY;
    public static Enchantment GLASS;
    public static Enchantment LEVITATING;
    public static Enchantment RADIANCE;
    public static Enchantment OBSCURE;
    public static Enchantment DISORIENTING;
    public static Enchantment DEBILITATING;
    public static Enchantment STARVING;
    public static Enchantment CRIPPLING;
    public static Enchantment SWIFTNESS;
    public static Enchantment LEAPING;
    public static Enchantment SLOW_FALLING;
    public static Enchantment DRAGON_SCALES;
    public static Enchantment HEALING;
    public static Enchantment INVISIBILITY;
    public static Enchantment MOMENTUM;
    public static Enchantment BOOSTERS;
    public static Enchantment REFLECTION;
    public static Enchantment DEATHWISH;
    public static Enchantment FIRE_RESISTANCE;
    public static Enchantment WATER_BREATHING;
    public static Enchantment STRENGTH;
    public static Enchantment HASTE;
    public static Enchantment INCREASED_HEALTH;
    public static Enchantment NIGHT_VISION;
    public static Enchantment DOLPHINS_GRACE;
    public static Enchantment CONDUIT_POWER;
    public static Enchantment HERO_OF_THE_VILLAGE;
    public static Enchantment CURSE_OF_MINING_FATIGUE;
    public static Enchantment CURSE_OF_SLOWNESS;
    public static Enchantment CURSE_OF_WEAKNESS;
    public static Enchantment CURSE_OF_LEVITATING;
    public static Enchantment CURSE_OF_AQUAPHOBIA;
    public static Enchantment CURSE_OF_RADIANCE;
    public static Enchantment ANCHOR;
    public static Enchantment SPURS;
    public static Enchantment AQUA_ASPECT;
    public static Enchantment BOUNCE;
    public static Enchantment PROJECTILE_RESISTANCE;
    public static Enchantment HEAVY;
    public static Enchantment FLAMING;

    private static ArrayList<Enchantment> customEnchantments = new ArrayList<>();

    public static ArrayList<Enchantment> all() {
        return new ArrayList<>(customEnchantments);
    }

    public static void register(Enchantment enchant) {
        customEnchantments.add(enchant);
        try {
            Field f = Enchantment.class.getDeclaredField("acceptingNew");
            f.setAccessible(true);
            f.set(null, true);
            Enchantment.registerEnchantment(enchant); 
        } 
        catch (Exception e) {
            Plugin.LOGGER.warning("Failed to register " + enchant.getKey().getKey() + ": " + e.getMessage());
        }
    }

    static void init(Plugin plugin) {
        DESTRUCTIVE = new Destructive(new NamespacedKey(plugin, "destructive"));
        TILLING = new Tilling(new NamespacedKey(plugin, "tilling"));
        REPLANTING = new Replanting(new NamespacedKey(plugin, "replanting"));
        EXCAVATING = new Excavating(new NamespacedKey(plugin, "excavating"));
        TELEKINESIS = new Telekinesis(new NamespacedKey(plugin, "telekinesis"));
        UNBREAKABLE = new Unbreakable(new NamespacedKey(plugin, "unbreakable"));
        SUSTENANCE = new Sustenance(new NamespacedKey(plugin, "sustenance"));
        WORM = new Worm(new NamespacedKey(plugin, "worm"));
        CRUSH = new Crush(new NamespacedKey(plugin, "crush"));
        LIFE_STEAL = new LifeSteal(new NamespacedKey(plugin, "life_steal"));
        FLING = new Fling(new NamespacedKey(plugin, "fling"));
        ENLIGHTENMENT = new Enlightenment(new NamespacedKey(plugin, "enlightenment"));
        RANGE = new Range(new NamespacedKey(plugin, "range"));
        PRECISION = new Precision(new NamespacedKey(plugin, "precision"));
        POISON = new Venom(new NamespacedKey(plugin, "venom"));
        WITHER = new Withering(new NamespacedKey(plugin, "withering"));
        BLOODTIPPED = new BloodTipped(new NamespacedKey(plugin, "blood_tipped"));
        VOLLEY = new Volley(new NamespacedKey(plugin, "volley"));
        GLASS = new Glass(new NamespacedKey(plugin, "glass"));
        LEVITATING = new Levitating(new NamespacedKey(plugin, "levitating"));
        RADIANCE = new Radiance(new NamespacedKey(plugin, "radiance"));
        OBSCURE = new Obscure(new NamespacedKey(plugin, "obscure"));
        DISORIENTING = new Disorienting(new NamespacedKey(plugin, "disorienting"));
        DEBILITATING = new Debilitating(new NamespacedKey(plugin, "debilitating"));
        STARVING = new Starving(new NamespacedKey(plugin, "starving"));
        CRIPPLING = new Crippling(new NamespacedKey(plugin, "crippling"));
        SWIFTNESS = new Swiftness(new NamespacedKey(plugin, "swiftness"));
        LEAPING = new Leaping(new NamespacedKey(plugin, "leaping"));
        SLOW_FALLING = new SlowFalling(new NamespacedKey(plugin, "slow_falling"));
        DRAGON_SCALES = new DragonScales(new NamespacedKey(plugin, "dragon_scales"));
        HEALING = new Healing(new NamespacedKey(plugin, "healing"));
        INVISIBILITY = new Invisibility(new NamespacedKey(plugin, "invisibility"));
        MOMENTUM = new Momentum(new NamespacedKey(plugin, "momentum"));
        BOOSTERS = new Boosters(new NamespacedKey(plugin, "boosters"));
        REFLECTION = new Reflection(new NamespacedKey(plugin, "reflection"));
        DEATHWISH = new DeathWish(new NamespacedKey(plugin, "death_wish"));
        FIRE_RESISTANCE = new FireResistance(new NamespacedKey(plugin, "fire_resistance"));
        WATER_BREATHING = new Gills(new NamespacedKey(plugin, "gills"));
        STRENGTH = new Strength(new NamespacedKey(plugin, "strength"));
        HASTE = new Haste(new NamespacedKey(plugin, "haste"));
        INCREASED_HEALTH = new IncreasedHealth(new NamespacedKey(plugin, "increased_health"));
        NIGHT_VISION = new NightVision(new NamespacedKey(plugin, "night_vision"));
        DOLPHINS_GRACE = new DolphinsGrace(new NamespacedKey(plugin, "dolphins_grace"));
        CONDUIT_POWER = new ConduitPower(new NamespacedKey(plugin, "conduit_power"));
        HERO_OF_THE_VILLAGE = new HeroOfTheVillage(new NamespacedKey(plugin, "hero_of_the_village"));
        CURSE_OF_MINING_FATIGUE = new CurseOfMiningFatigue(new NamespacedKey(plugin, "curse_of_mining_fatigue"));
        CURSE_OF_SLOWNESS = new CurseOfSlowness(new NamespacedKey(plugin, "curse_of_slowness"));
        CURSE_OF_WEAKNESS = new CurseOfWeakness(new NamespacedKey(plugin, "curse_of_weakness"));
        CURSE_OF_LEVITATING = new CurseOfLevitating(new NamespacedKey(plugin, "curse_of_levitating"));
        CURSE_OF_AQUAPHOBIA = new CurseOfAquaphobia(new NamespacedKey(plugin, "curse_of_aquaphobia"));
        CURSE_OF_RADIANCE = new CurseOfRadiance(new NamespacedKey(plugin, "curse_of_radiance"));
        ANCHOR = new Anchor(new NamespacedKey(plugin, "anchor"));
        SPURS = new Spurs(new NamespacedKey(plugin, "spurs"));
        AQUA_ASPECT = new AquaAspect(new NamespacedKey(plugin, "aqua_aspect"));
        BOUNCE = new Bounce(new NamespacedKey(plugin, "bounce"));
        PROJECTILE_RESISTANCE = new ProjectileResistance(new NamespacedKey(plugin, "projectile_resistance"));
        HEAVY = new Heavy(new NamespacedKey(plugin, "heavy"));
        FLAMING = new Flaming(new NamespacedKey(plugin, "flaming"));
    }

    static void registerAll() {
        register(DESTRUCTIVE);
        register(TILLING);
        register(REPLANTING);
        register(EXCAVATING);
        register(TELEKINESIS);
        register(UNBREAKABLE);
        register(SUSTENANCE);
        register(WORM);
        register(CRUSH);
        register(LIFE_STEAL);
        register(FLING);
        register(ENLIGHTENMENT);
        register(RANGE);
        register(PRECISION);
        register(POISON);
        register(WITHER);
        register(BLOODTIPPED);
        register(VOLLEY);
        register(GLASS);
        register(LEVITATING);
        register(RADIANCE);
        register(OBSCURE);
        register(DISORIENTING);
        register(DEBILITATING);
        register(STARVING);
        register(CRIPPLING);
        register(SWIFTNESS);
        register(LEAPING);
        register(SLOW_FALLING);
        register(DRAGON_SCALES);
        register(HEALING);
        register(INVISIBILITY);
        register(MOMENTUM);
        register(BOOSTERS);
        register(REFLECTION);
        register(DEATHWISH);
        register(FIRE_RESISTANCE);
        register(WATER_BREATHING);
        register(STRENGTH);
        register(HASTE);
        register(INCREASED_HEALTH);
        register(NIGHT_VISION);
        register(DOLPHINS_GRACE);
        register(CONDUIT_POWER);
        register(HERO_OF_THE_VILLAGE);
        register(CURSE_OF_MINING_FATIGUE);
        register(CURSE_OF_SLOWNESS);
        register(CURSE_OF_WEAKNESS);
        register(CURSE_OF_LEVITATING);
        register(CURSE_OF_AQUAPHOBIA);
        register(CURSE_OF_RADIANCE);
        register(ANCHOR);
        register(SPURS);
        register(AQUA_ASPECT);
        register(BOUNCE);
        register(PROJECTILE_RESISTANCE);
        register(HEAVY);
        register(FLAMING);
    }
}
